/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/red_drawers.glb --t 
Author: 1-3D.com (https://sketchfab.com/1-3D.com)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/red-drawers-54a0472b77c84658a8be0a4d9b53817a
Title: Red drawers
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
  }
  materials: {
    Aluminum: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    Wood_Cherry: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function RedDrawers(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/red_drawers.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        {/* <mesh geometry={nodes.Object_2.geometry} material={materials.Aluminum} /> */}
        {/* <mesh geometry={nodes.Object_3.geometry} material={materials.Material} /> */}
        <mesh geometry={nodes.Object_4.geometry} material={materials.Wood_Cherry} />
      </group>
    </group>
  )
}

useGLTF.preload('/red_drawers.glb')
