/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/book_shelf_2.glb --t 
Author: StaticBuffering (https://sketchfab.com/StaticBuffering)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-book-shelf-9f9e0e532a5846c1acc252fcf664813b
Title: Low Poly Book Shelf
*/

import * as THREE from 'three'
import React, { useContext, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useLoader } from '@react-three/fiber'
import {DimensionContext} from '../../contexts/DimensionContext'
import {MaterialContext} from '../../contexts/MaterialContext'

type GLTFResult = GLTF & {
  nodes: {
    bookShelf_BookShelf_Brown_0: THREE.Mesh
  }
  materials: {
    BookShelf_Brown: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function BookShelf2(props: JSX.IntrinsicElements['group']) {
  const {material} = useContext(MaterialContext)
  const {dimensions} = useContext(DimensionContext)
  const bodyMap = useLoader(THREE.TextureLoader,material.body.src)
  const BodyMaterial = new  THREE.MeshStandardMaterial()
  BodyMaterial.map = bodyMap
  const {x,y,z} = dimensions
  const { nodes, materials } = useGLTF('/book_shelf_2.glb') as GLTFResult
  return (
    <group {...props} dispose={null} scale={[x,y,z*3]}>
      <mesh geometry={nodes.bookShelf_BookShelf_Brown_0.geometry} material={BodyMaterial} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/book_shelf_2.glb')
