/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/shelf.glb --t 
Author: antontomilenko19 (https://sketchfab.com/antontomilenko4)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/white-shelf-785079b837c246deb7cf61efcfb40482
Title: White shelf
*/

import * as THREE from 'three'
import React, { useContext, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useLoader } from '@react-three/fiber'
import {DimensionContext} from '../../contexts/DimensionContext'
import {MaterialContext} from '../../contexts/MaterialContext'
import { materials } from '../../repo'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
    Object_10: THREE.Mesh
    Object_12: THREE.Mesh
    Object_14: THREE.Mesh
    Object_16: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function BasicShelf(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/shelf.glb') as GLTFResult
  const {material} = useContext(MaterialContext)
  const {dimensions} = useContext(DimensionContext)
  const bodyMap = useLoader(THREE.TextureLoader,material.body.src)
  const BodyMaterial = new  THREE.MeshStandardMaterial()
  const handleMap = useLoader(THREE.TextureLoader,material.door.src)
  const HandleMaterial = new  THREE.MeshStandardMaterial()
  BodyMaterial.map = bodyMap
  HandleMaterial.map = handleMap
  const {x,y,z} = dimensions
  return (
    <group {...props} dispose={null} scale={[x * 2,y,z]}>
      <mesh geometry={nodes.Object_4.geometry} material={BodyMaterial} position={[0.448, 0.86, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[-0.026, 0.026, 0.299]} />
      <mesh geometry={nodes.Object_6.geometry} material={BodyMaterial} position={[-0.505, 0.86, 0]} scale={[0.026, 0.026, 0.299]} />
      <mesh geometry={nodes.Object_8.geometry} material={BodyMaterial} position={[0.46, -0.981, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.026, 0.014, 0.299]} />
      <mesh geometry={nodes.Object_10.geometry} material={BodyMaterial} position={[0.46, 0.912, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.026, 0.014, 0.299]} />
      <mesh geometry={nodes.Object_12.geometry} material={BodyMaterial} position={[0.412, 0.43, 0]} scale={[0.009, 0.009, 0.299]} />
      <mesh geometry={nodes.Object_14.geometry} material={BodyMaterial} position={[0.412, -0.499, 0]} scale={[0.009, 0.009, 0.299]} />
      <mesh geometry={nodes.Object_16.geometry} material={BodyMaterial} position={[0.412, -0.036, 0]} scale={[0.009, 0.009, 0.299]} />
    </group>
  )
}

useGLTF.preload('/shelf.glb')
